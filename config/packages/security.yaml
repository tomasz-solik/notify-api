security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_USER:        [ROLE_USER]
        ROLE_MODERATOR:   [ROLE_MODERATOR]
        ROLE_ADMIN:       [ROLE_ADMIN]

    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
        App\Entity\Users\Users:
            algorithm: bcrypt
            cost: 12
    providers:
        entity_provider:
            entity:
                class: App\Entity\Users\Users
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/users/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/users/login_check
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        registration:
            pattern:  ^/api/users/registration
            stateless: true
            anonymous: true

        api:
            pattern:   ^/api
            stateless: true
            anonymous: false
            provider: entity_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/users/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/users/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
